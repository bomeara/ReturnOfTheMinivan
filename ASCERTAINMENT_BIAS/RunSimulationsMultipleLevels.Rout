
R version 3.4.0 (2017-04-21) -- "You Stupid Darkness"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> source("Functions.R")
Skipping install of 'corHMM' from a github remote, the SHA1 (0b6a910d) has not changed since last install.
  Use `force = TRUE` to force installation
Loading required package: nloptr
Loading required package: GenSA
> library(ape)
> library(phytools)
Loading required package: maps
> library(geiger)
> 
> GetGenus <- function(x) {
+   return(unname(strsplit(x, "_")[[1]][1]))
+ }
> 
> DoGenusRep <- function(genus, phy, data, ...) {
+   taxa <- rownames(data)
+   matching.elements <- which(sapply(rownames(data), GetGenus)==genus)
+   data <- data[matching.elements]
+   names(data) <- taxa[matching.elements]
+   pruned <- geiger::treedata(phy, data, sort=TRUE, warnings=FALSE)
+   char.corhmm <- data.frame(species=rownames(pruned$data), region=unname(pruned$data), stringsAsFactors=FALSE)
+   phy <- pruned$phy
+   return(RunAndSummarize(phy, char.corhmm, run.type="genus",...))
+ }
> 
> DoCladeRep <- function(clade, rank, phy, data, taxonomy, ...) {
+   matching.elements <- which(taxonomy[,which(colnames(taxonomy)==rank)]==clade)
+   taxa.to.delete <- taxonomy$gs[-matching.elements]
+   phy <- ape::drop.tip(phy, taxa.to.delete)
+   data <- data[,1,1]
+   pruned <- geiger::treedata(phy, data, sort=TRUE, warnings=FALSE)
+   char.corhmm <- data.frame(species=rownames(pruned$data), region=unname(pruned$data), stringsAsFactors=FALSE)
+   phy <- pruned$phy
+   return(RunAndSummarize(phy, char.corhmm, run.type=rank,...))
+ }
> 
> DoRandomRep <- function(ntax, phy, data, ...) {
+   phy <- geiger::drop.random(phy, ape::Ntip(phy)-ntax)
+   data <- data[,1,1]
+   pruned <- geiger::treedata(phy, data, sort=TRUE, warnings=FALSE)
+   char.corhmm <- data.frame(species=rownames(pruned$data), region=unname(pruned$data), stringsAsFactors=FALSE)
+   phy <- pruned$phy
+   return(RunAndSummarize(phy, char.corhmm, run.type=paste0("random_",ntax,"_taxa"),...))
+ }
> 
> RunAndSummarize <- function(phy, data, run.type, ...) {
+   count0 <-  sum(data$region==0)
+   count1 <-  sum(data$region==1)
+   if(any(c(count0, count1)==0)) {
+     rate01 = NA
+     rate10 = NA
+   } else {
+     corhmm.result <- corHMM::corHMM(phy, data, rate.cat=1, node.states="none", root.p="maddfitz", ...)
+     rate01 <- corhmm.result$solution[1,2]
+     rate10 <- corhmm.result$solution[2,1]
+   }
+   result.overall <- data.frame(rate01=rate01, rate10=rate10, count0=count0, count1=count1, ntip=Ntip(phy), depth=max(ape::branching.times(phy)), total.length = sum(phy$edge.length), label=run.type, stringsAsFactors=FALSE)
+   return(result.overall)
+ }
> 
> DoSingleSimRep <- function(phy, rates, mintax=50, maxtax=Inf, taxonomy,...) {
+   genera.table <- table(unname(sapply(phy$tip.label, GetGenus)))
+   genera.table <- genera.table[which(genera.table>=mintax)]
+   genera.table <- genera.table[which(genera.table<=maxtax)]
+   genera <- names(genera.table)
+ 
+   families.table <- table(unname(taxonomy$family))
+   families.table <- families.table[which(families.table>=mintax)]
+   families.table <- families.table[which(families.table<=maxtax)]
+   families <- names(families.table)
+ 
+   orders.table <- table(unname(taxonomy$order))
+   orders.table <- orders.table[which(orders.table>=mintax)]
+   orders.table <- orders.table[which(orders.table<=maxtax)]
+   orders <- names(orders.table)
+ 
+   ntax.vector <- c(50, 100, 200, 500, 1000)
+ 
+   chars <- geiger::sim.char(phy, par=list(rates), nsim=1, model="discrete", root=2) #2 = tropical when they're on a 1,2 scale
+   chars <- chars - 1 #go back to 0,1 scale
+   results.genus <- sapply(genera, DoGenusRep, phy=phy, data=chars, ...)
+   results.family <- sapply(families, DoCladeRep, phy=phy, data=chars, taxonomy=taxonomy, rank="family",...)
+   results.order <- sapply(orders, DoCladeRep, phy=phy, data=chars, taxonomy=taxonomy, rank="order",...)
+   results.random <- sapply(ntax.vector, DoRandomRep, phy=phy, data=chars, ...)
+ 
+   char.corhmm <- data.frame(species=rownames(chars), region=unname(chars), stringsAsFactors=FALSE)
+   rownames(char.corhmm) <- char.corhmm$species
+   entire.tree <- RunAndSummarize(phy, char.corhmm, run.type="entire", ...)
+   all.results <- cbind(t(entire.tree),results.genus, results.family, results.order, results.random)
+   colnames(all.results)[1] <- "ENTIRE"
+   return(all.results)
+ }
> 
> taxonomy <- read.csv("Campanulid.reference.table.csv", stringsAsFactors=FALSE)
> taxonomy <- taxonomy[which(nchar(taxonomy$gs)>0),]
> 
> load("ResultThreshold0.5.rda")
> phy <- result1_0.5$phy
> rates <- result1_0.5$solution
> diag(rates) <- -rowSums(rates, na.rm=TRUE)
> sim.results.list <- list()
> for (i in sequence(100)) {
+   sim.results.list[[i]] <- try(DoSingleSimRep(phy, rates, taxonomy=taxonomy, mintax=50, nstarts=3, n.cores=3))
+   save(list=ls(), file="SimulationResultsMultipleLevels.rda")
+   try(system("git add SimulationResultsMultipleLevels.rda"))
+   try(system("git commit -m'Sim result' -a"))
+   try(system("git push"))
+ }
State distribution in data:
States:	0	1	
Counts:	59	1	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	8	135	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	52	4	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	60	4	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	62	5	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	168	52	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	160	24	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	64	3	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	62	5	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	70	5	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	120	10	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	8	67	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	61	26	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	156	9	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	76	63	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	68	14	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	52	1	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	62	19	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	1	50	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	61	3	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	49	6	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	52	4	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	44	50	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	114	1	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	56	11	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	70	39	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	244	17	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	77	1	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	39	11	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	61	2	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	50	65	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	82	37	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	58	13	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	100	37	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	1235	277	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	76	63	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	250	199	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	5321	1467	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	56	4	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	526	208	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	251	123	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	180	55	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	25	8	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	32	32	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	1540	515	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	87	70	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	6108	1762	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	57	5	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	351	160	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	39	11	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	84	16	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	158	42	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	386	114	
Beginning thorough optimization search -- performing 3 random restarts 
Finished. Performing diagnostic tests. 
State distribution in data:
States:	0	1	
Counts:	780	220	
Beginning thorough optimization search -- performing 3 random restarts 
